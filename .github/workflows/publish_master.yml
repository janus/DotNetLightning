name: publish(master)
on:
  push:
    branches:
      - master
      - cd # just for now.
      - 'nightly*' # to workaround regular publishing process

jobs:
  check_nuget_secret:
    runs-on: ubuntu-20.04
    outputs:
      nuget-api-key: ${{ steps.nuget-api-key.outputs.defined }}
    steps:
    - id: nuget-api-key
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      if: "${{ env.NUGET_API_KEY != '' }}"
      run: echo "::set-output name=defined::true"

  pack_and_push:
    needs: [check_nuget_secret]
    if: needs.check_nuget_secret.outputs.nuget-api-key == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        dotnet: ['5.0.x']
        include:
          - os: ubuntu-20.04
            RID: linux
          - os: macos-latest
            RID: osx
          - os: windows-latest
            RID: windows
      fail-fast: true
    steps:

    - uses: actions/checkout@v2

    - name: Setup ${{ matrix.dotnet }} .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Upload nuget packages (Portability)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        dotnet pack ./src/DotNetLightning.Core -p:Configuration=Release --version-suffix date`date +%Y%m%d-%H%M`-git-`echo $GITHUB_SHA | head -c 7` -p:Portability=True
        dotnet nuget push ./src/DotNetLightning.Core/bin/Release/DotNetLightning.1*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

    - name: Upload nuget packages (native)
      run: |
        bash -c "dotnet pack ./src/DotNetLightning.Core -p:Configuration=Release --version-suffix date$(date +%Y%m%d-%H%M).git-$(git rev-parse --short=7 HEAD)-${{ matrix.RID }}"
        bash -c "dotnet nuget push ./src/DotNetLightning.Core/bin/Release/DotNetLightning.Core.1*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json"
